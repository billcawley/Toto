<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <!--
        Controllers are setup using annotations
        See   http://blog.springsource.org/2007/11/14/annotated-web-mvc-controllers-in-spring-25/
        for details of controller annotations
        -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1" />
    </bean>
    <mvc:annotation-driven/>
    <!-- pasted from stack overflow to stop caching in the browser. I don't think we want this for anything delivered by this servlet -->
    <mvc:interceptors>
        <bean id="webContentInterceptor"
              class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <property name="cacheSeconds" value="0"/>
            <property name="useExpiresHeader" value="true"/>
            <property name="useCacheControlHeader" value="true"/>
            <property name="useCacheControlNoStore" value="true"/>
        </bean>
    </mvc:interceptors>
    <context:component-scan base-package="com.azquo.spreadsheet.controller">
    </context:component-scan>
    <context:component-scan base-package="com.azquo.admin.controller">
    </context:component-scan>
    <!-- for app conntrollers -->
    <context:component-scan base-package="com.azquo.app.magento.controller">
    </context:component-scan>
</beans>
