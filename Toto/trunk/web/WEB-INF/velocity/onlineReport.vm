<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    $styles
    <script type="text/javascript">




        var selectionX = $leftcell;
        var selectionY = $topcell;
        var maxRow = $maxrow;
        var maxCol = $maxcol;
        var leftCol = selectionX;
        var topRow = selectionY;
        var regions =$regions;
        var entryX = -1;
        var entryY = -1;
        var entryVal = null;
        var entryRegion = null;
        var entryX = 0;
        var entryY = 0;
        var controlKeyDown = false;
        //var menuControls = $menuitems;
        var clickedItem = null;
        var nameChosenNo = 0
        var origval = null;
        var lastentered = null;
        var topMenuOpening = false;
        var dataRegionMenu = "";




        function az_clicklist(e) {
            setClicked(e)
            var azSet = nextSibling(clickedItem);
            var nameId = azSet.innerHTML;
            var tag = azSet.tagName.toLowerCase();
            while (tag != "ul" && tag != "li" && nextSibling(azSet) != null){
                azSet = nextSibling(azSet);
                tag = azSet.tagName.toLowerCase();
            }
            if (tag=="ul"){
                //zap it!
                azSet.parentElement.removeChild(azSet);

            }else{
                azquojson("Online","opcode=children&nameid=" + nameId);
            }
            /*  old behaviour - set always present

            while (azSet.tagName.toLowerCase() != "ul" && azSet.tagName.toLowerCase){
                azSet = nextSibling(azSet)
            }
            if (azSet.style.display=="none"){
                azSet.style.display="block";
            }else{
                azSet.style.display="none";
            }
            */
        }


        function getStyle(oElm, strCssRule){
            var strValue = "";
            if(document.defaultView && document.defaultView.getComputedStyle){
                strValue = document.defaultView.getComputedStyle(oElm, "").getPropertyValue(strCssRule);
            }
            else if(oElm.currentStyle){
                strCssRule = strCssRule.replace(/\-(\w)/g, function (strMatch, p1){
                    return p1.toUpperCase();
                });
                strValue = oElm.currentStyle[strCssRule];
            }
            return strValue;
        }

        function getStyleInt(oElm, strCssRule){
            return parseInt(getStyle(oElm, strCssRule));
        }

        function convertRegions(){
            for (var i = 0;i < regions.length;i++){
                var region = regions[i];
                region.x = parseInt(region.left);
                region.y = parseInt(region.top);
                region.rows = parseInt(region.bottom) - region.y + 1;
                region.cols = parseInt(region.right) - region.x + 1;
            }
        }


        function hideMenu(control, e) {
            var element = document.getElementById(control);
            if (element == null || mouseIn(element, e) || document.getElementById(control).style.display=="none") {
                return false;
             }
            document.getElementById(control).style.display = "none";
            return true;
        }


        function mouseIn(elementChosen, e){
            var IE = document.all?true:false;
            if (IE) { // grab the x-y pos.s if browser is IE
                var mouseX = e.clientX + document.body.scrollLeft
                var mouseY = e.clientY + document.body.scrollTop
            } else {  // grab the x-y pos.s if browser is NS
                mouseX = e.pageX
                mouseY = e.pageY
            }

            var el=elementChosen;
            for (var lx=0, ly=0;
                 el != null;
                 lx += el.offsetLeft-el.scrollLeft, ly += el.offsetTop-el.scrollTop, el = el.offsetParent);
            if (mouseX >= lx && mouseY >= ly && mouseX <= lx + elementChosen.offsetWidth && mouseY <= ly + elementChosen.offsetHeight){
                return true;
            }
            return false;
        }

        function setClicked(e){
            if (clickedItem != null && clickedItem.tagName.toLowerCase()=="li"){
                clickedItem.className = "";
            }
            clickedItem = e.target;
            if (clickedItem == null) clickedItem = e;
            if (clickedItem != null){

                if (clickedItem.tagName.toLowerCase() == "li") {

                    clickedItem.className = "highlight";
                    var nextItem = nextSibling(clickedItem);
                    nameChosenNo = nextItem.innerHTML;
                }
            }

        }

        function showDataRegionMenu(dataRegion, e){
            setClicked(e)
            var IE = document.all?true:false;
            if (IE) { // grab the x-y pos.s if browser is IE
                var mouseX = e.clientX + document.body.scrollLeft
                var mouseY = e.clientY + document.body.scrollTop
            } else {  // grab the x-y pos.s if browser is NS
                mouseX = e.pageX
                mouseY = e.pageY
            }
            var left = mouseX;
            var top = mouseY;
            var el = document.getElementById("cell" + selectionY + "-" + selectionX);
            while (el!=null){
                top += el.scrollTop;
                el = el.offsetParent;
            }
            top = top-200;//TODO Work out why top is too low.
            var popup =document.getElementById("menu" + dataRegion);
            popup.style.left = left + "px";
            popup.style.top = top + "px";
            popup.style.display="block";
            document.getElementById("regionspec" + dataRegion).style.display="none";
            document.getElementById("regionlist" + dataRegion).style.display="block";
            dataRegionMenu = "menu" + dataRegion;
            return false; //disables the default context menu
        }

        function findMenuItem(position){
            for (var i = 0;i < menuControls.length;i++){
                if (menuControls[i].position == position){
                    return menuControls[i];
                }
            }
            return null;
        }


        function positionSelection(){
            if (entryX >=0 && (selectionX != entryX || selectionY != entryY)){
                cancelEntry();
            }
            if (entryX >=0){
                return;
            }
            var cursor = document.getElementById("selector");
            var selectionCell = document.getElementById("cell" + selectionY + "-" + selectionX);
            var selborder = getStyleInt(cursor, "border-right-width");
            cursor.style.left = getStyle(selectionCell, "left");
            cursor.style.top = getStyle(selectionCell,"top");
            var width = getStyleInt(selectionCell,"width");
            var cellBorderRight = getStyleInt(selectionCell, "border-right-width");
            var cellBorderBottom = getStyleInt(selectionCell,"border-bottom-width");
            var height =  getStyleInt(selectionCell,"height");
            cursor.style.width = (width - selborder + cellBorderRight) + "px";
            cursor.style.height = (height - selborder + cellBorderBottom) + "px";
            selectionCell.focus();
            if (locked(selectionX, selectionY) == "") {
                startEntry();
            }

        }

        function cellExists(x,y){
            var cell = document.getElementById("cell" + y + "-" + x);
            if (cell == null) return false;
            return true;
        }

        function cellBottom(col, row){
            var cell = document.getElementById("cell"+row+"-"+col);
            if (cell==null) return 0;
            var bottom = cell.offsetHeight;
            while (cell!=null){
                bottom += cell.offsetTop - cell.scrollTop;
                cell = cell.offsetParent;
            }
            return bottom;
        }

        function cellRight(col, row){
            var cell = document.getElementById("cell"+row+"-"+col);
            if (cell==null) return 0;
            var right = cell.offsetWidth;
            while (cell!=null){
                right += cell.offsetLeft - cell.scrollLeft;
                cell = cell.offsetParent;
            }
            return right;
        }



        function mouseInDataRegion(e) {
            var IE = document.all?true:false;
            if (IE) { // grab the x-y pos.s if browser is IE
                var mouseX = e.clientX + document.body.scrollLeft
                var mouseY = e.clientY + document.body.scrollTop
            } else {  // grab the x-y pos.s if browser is NS
                mouseX = e.pageX
                mouseY = e.pageY
            }
            for (var i = 0; i < regions.length; i++) {
                var region = regions[i];
                if (region.left > 0 && region.top > 0){
                    if (mouseX >= cellRight(region.left-1, region.top)
                      && mouseX <= cellRight(parseInt(region.left) + parseInt(region.cols) - 1, region.top)
                      && mouseY >= cellBottom(region.left, region.top-1)
                      && mouseY <=cellBottom(region.left, parseInt(region.top) + parseInt(region.rows) - 1)) {
                        return region.name;
                    }
                }

            }
            return "no region";
        }

        function locked(cellX,cellY){
            for (var i = 0;i < regions.length;i++){
                var region = regions[i];
                if (cellX >= region.x && cellY >= region.y && cellX < region.x + region.cols && cellY < region.y + region.rows) {
                    if (region.locks.length==0){
                        return "";
                    }
                    entryX = cellX;
                    entryY = cellY
                    var entryRegionX = cellX - region.x;
                    var entryRegionY = cellY - region.y;
                    var locked = region.locks[entryRegionY][entryRegionX];
                    return locked;
                }
            }
            return "LOCKED";
        }



        document.onclick = onClick


        function noClick(e){
            return true;
        }

        function setSelection(cellId){
            var dashPos = cellId.indexOf("-");
            var yStr = cellId.substr(4, dashPos);
            var xStr = cellId.substr(dashPos + 1);
            selectionX = parseInt(xStr);
            selectionY = parseInt(yStr);

        }

        function openTopMenu(){
            document.getElementById("topmenubox").style.display="block";
            topMenuOpening = true;
        }

        function onClick(e){
            setClicked(e);
            if (!topMenuOpening){
                hideMenu("topmenubox", e);
            }
            topMenuOpening = false;
            if (hideMenu(dataRegionMenu, e)){
                return false;
            }
            var target = e.target;
            if (target==null) target = e;
            if (target.type=="file"){
                return true;
            }
            if (target.type == "checkbox"){
                return true;//doesn't seem to like changing checkboxes.....
            }
            var cellId = target.id
            while (cellId != undefined && cellId.substring(0, 4) != "cell" && target.parentNode != null) {
                target = target.parentNode;
                cellId = target.id;
            }
            if (cellId != null && cellId.substr(0, 4) == "cell") {
                setSelection(cellId);
            }
            positionSelection();
            return false;
        }


        function toMenu(){
            if (document.getElementById("spreadsheetname").value==""){
                loadsheet("");
                // window.open("http://www.azquo.com");
            }else{
                loadsheet("");
            }
        }

        function startEntry() {


            var container = document.getElementById("cell" + selectionY + "-" + selectionX);
            origval = container.innerHTML.trim();
            if (origval.substring(0,1)=="<"){ //not a text cell
                return;
            }

            entryX = selectionX;
            entryY = selectionY;

            var height = container.offsetHeight - 3;//allow for padding (2) and border (1) this may not work on all occasions
            var width  = container.offsetWidth - 3;
            container.innerHTML = "<INPUT type=\"text\" id=\"entered\" value=\""+origval+"\" class=\"" + container.className + "\" style=\"padding:0;top:0;left:0;height:" + height + "px;width:" + width + "px;\">";
            container.firstChild.focus();
            var entryfield = document.getElementById("entryfield");
            entryfield.style.display = "block";
            document.getElementById("topentry").value = origval;


            // container.setAttribute("contentEditable", true);
            //container.focus();
            /*
            var content = container.innerHTML;
            container.innerHTML = "";
            var input = document.createElement("input");
            input.setAttribute("type","text");
            input.setAttribute("value", content);
            input.setAttribute("name","focus");
            input.style.zIndex = 10;
            container.appendChild(input);
            input.focus();
            */

        }

        function saveData(){
            azquojson("Online","opcode=savedata");

        }


        function cancelEntry() {


            if (entryX < 0) return;
            lastentered = null;
            if (document.getElementById("entered")==null){
                //entry field has been overwritten already by changed values
                entryX=-1;
                entryY=-1;
                return;
            }

            var container = document.getElementById("cell" + entryY + "-" + entryX);
            var entered = document.getElementById("entered").value.trim();
            //container.setAttribute("contentEditable", false);
            container.innerHTML = entered;

            document.getElementById("entryfield").style.display = "none";
            if (entered != origval){
                sendValue(entered, entryX, entryY)
                document.getElementById("saveData").style.display="inline";
            }
            entryX = -1;
            entryY = -1;


        }




        document.onkeyup =function (e) {
            if (e.target) keyfield = e.target;
            else keyfield = e;
            if (keyfield.id == 'entered'){
                document.getElementById("topentry").value = document.getElementById("entered").value;
            }
            if (keyfield.id == 'topentry'){
                document.getElementById("entered").value = document.getElementById("topentry").value;
            }
            controlKeyDown = false;
            return true;
        }


        function sortCol(region, colVal){
            document.getElementById("editedName").value = "sort " + region + " by column";
            document.getElementById("editedValue").value = colVal;
            document.getElementById("opcode").value="setchosen";
            document.azquoform.submit();
        }



        function sortRow(region, rowVal){
            document.getElementById("editedName").value = "sort " + region + " by row";
            document.getElementById("editedValue").value = rowVal;
            document.getElementById("opcode").value="setchosen";
            document.azquoform.submit();
        }


        function showProvenance(){
            azquojson("Online","opcode=provenance&row=" + selectionY + "&col=" + selectionX );
            document.getElementById(dataRegionMenu).style.display = "none";
            return false;
        }

        function findParent(item){
            var parent = item.parentNode;
            var count = 0;
            for (var count = 0;count < 5;count++){
                if (parent.tagName.toLowerCase()=='li'){
                    break;
                }
                parent = parent.previousElementSibling;
            }
            if (count==3) return null;
            return parent;
        }

        function findId(item){
            return item.nextElementSibling.innerHTML;
        }

        function findParentId(item){
            return findId(findParent(item));
        }



        function tellAzquoNameShift(source, parent, newPosition){
            var params="\"operation\":\"edit\",\"id\":" + source;
            if (newPosition>0){
                params += ",\"newParent\":" + parent + ",\"newPosition\":" + newPosition;

            }else{
                params +=",\"oldParent\":" + parent ;
            }
            azquojson("Name", params);

        }

        function deleteName(){
            var j=1;
        }


        function showHighlight() {
            document.getElementById("highlightoptions").style.display = "block";
            document.getElementById(dataRegionMenu).style.display = "none";
        }

        function tryNewSheet(){
            document.getElementById("newversion").value = "true";
            document.azquoform.submit();
        }


        function highlight(days){
            document.getElementById("editedName").value = "highlight";
            document.getElementById("editedValue").value = days + "";
            document.getElementById("opcode").value="setchosen";
            document.azquoform.submit();
        }

        function submitOptions(region){
            document.getElementById("editedName").value = "region options:"+region;
            document.getElementById("opcode").value="setchosen";
            document.azquoform.submit();
        }

        function clearOverrideOptions(region){
            document.getElementById("editedName").value = "region options:"+region;
            document.getElementById("opcode").value="setchosen";
            document.getElementById("editedValue").value = "clear";
            document.azquoform.submit();
        }

        function showRegionSpec(region){
            document.getElementById("regionlist" + region).style.display="none";
            document.getElementById("regionspec" + region).style.display="block";
        }

        document.onkeydown =function (e) {

            //var evtobj=window.event? event : e;
            //if (evtobj.altKey || evtobj.ctrlKey || evtobj.shiftKey)
            //    alert("you pressed one of the 'Alt', 'Ctrl', or 'Shift' keys");


            var el = e.target;
            if (!e.target) el = e;

            while (el.parentNode != null && (el.id==null || el.id != "topentry")){
                el = el.parentNode;
            }
            if (el.id!=null && el.id=="topentry") return true;

            var unicode = e.charCode ? e.charCode : e.keyCode;
            switch (unicode) {
                case 17: controlKeyDown = true;
                    break;

                case 37:

                    if (selectionX > 0){
                        var newX = selectionX - 1;
                        while (newX >= 0 && !cellExists(newX, selectionY)) newX--;
                        if (newX >=0) selectionX = newX
                    }
                    break;
                case 38:
                    if (selectionY > 0){
                        var newy = selectionY - 1;
                        while (newy >= 0 && !cellExists(selectionX, newy)) newy--;
                        if (newy >=0) selectionY = newy
                    }
                    break;
                case 39:
                    if (selectionX < maxCol){
                        var newX = selectionX + 1;
                        while (newX <= maxCol && !cellExists(newX, selectionY)) newX++;
                        if (newX <= maxCol) selectionX = newX
                    }
                    break;
                case 40:
                    if (selectionY < maxRow){
                        var newy = selectionY + 1;
                        while (newy <= maxRow && !cellExists(selectionX, newy)) newy++;
                        if (newy <= maxRow) selectionY = newy
                    }
                    break;
                case 13:
                    cancelEntry();//accept new value
                    positionSelection();
                    return false;//disable return key as a 'submit' button
            }
            positionSelection();
            return true;
        }

        function reportChosen(reportToLoad){
            document.getElementById("reportToLoad").value = reportToLoad;
            document.getElementById("opcode").value="loadsheet";
            document.getElementById("spreadsheetname").value ="";
            document.azquoform.submit();
        }

        function selectChosen(divName, inContext){
            var entered = document.getElementById(divName);

            lastentered = divName;
            if (inContext) {
                document.getElementById("editedName").value = divName;
                document.getElementById("editedValue").value = entered.value;
                document.getElementById("opcode").value = "setchosen"
                document.azquoform.submit();
            }else{
                setSelection(entered.parentElement.id);
                sendValue(entered.value, selectionX, selectionY);
            }
        }

        function selectFromListChosen(selectName){
            var chosen = document.getElementById("selectionListItem").value;
            if (chosen==null) chosen="";
            document.getElementById("editedName").value = selectName;
            document.getElementById("editedValue").value = chosen;
            document.getElementById("opcode").value = "setchosen"
            document.azquoform.submit();

        }


        function inspectDatabase(){
            var databasechosen = document.getElementById("databasechosen");
            var searchItems = "";
            if (document.getElementById("entered") != null){
                searchItems = document.getElementById("entered").value;
            }
            var db = "";
            if (databasechosen!=null){
                db = databasechosen.value;
            }
            window.open("/api/Jstree?op=new&database=" + db + "&itemschosen=" + searchItems, "_blank", "toolbar=no, status=no,scrollbars=yes, resizable=yes, top=150, left=200, width=600, height=600")
        }

        function uploadFile(){
            window.open("/api/Online?opcode=upload", "_blank", "toolbar=no, status=no, scrollbars=no, resizable=no, top=150, left=200, width=510, height=200")
        }



        function loadsheet(sheetname){
            document.getElementById("spreadsheetname").value = sheetname;
            document.getElementById("opcode").value="loadsheet";
            if (sheetname == ""){
                document.getElementById("reportToLoad").value = "1";
            }else{
                document.getElementById("reportToLoad").value = "";
            }
            document.azquoform.submit();
        }
        // todo - should this pass the report id? I worry about multiple tabs
        function downloadAsXLS(){
            window.open("/api/Download");
        }

        function downloadAsPDF(){
            window.open("/api/Download?pdf=true");

        }


        function findPos(item){

            //returns the position in the set of the current item
            var parent = item.parentNode;
            var list = parent.getElementsByTagName("LI");
            for (var i=0;i < list.length;i++){
                var child = list[i];
                if (child.innerHTML == item.innerHTML){
                    return i + 1;
                }
            }
            return 0;
        }


        function nextSibling(azSet){
            var azNext = azSet.nextElementSibling;
            if (!azNext) azNext = azSet.nextElementSibling; //IE
            return azNext;
        }





        function sendValue(value, x, y){

            document.getElementById("message").innerHTML = "";
            azquojson("Online","opcode=valuesent&row=" + y + "&col=" + x  + "&value=" + encodeURIComponent(value));
        }



        function azquojson(functionName, params){
            if (functionName == "Name"){
                params = "json={" + params + ",\"jsonFunction\":\"azquojsonfeed\"}";
            }
            //var htmlText = "http://www.bomorgan.co.uk:8080/api/" + functionName + "?" + params;
            var htmlText = "/api/" + functionName + "?" + params;
            var script = document.createElement('script'),
                    head = document.getElementsByTagName('head')[0] || document.documentElement;
            script.src = htmlText;
            head.appendChild(script);
        }


        function oneTerm(val1, val2){
            return "<tr><td><b>" + val1 + "</b></td><td>" + val2 + "</td></tr>";
        }

        function showDate(dateSent){
            return dateSent;
        }

        function makeList(names){
            var start = true;
            var output = "";
            for (var i = 0; i < names.length; i++){
                if (start){
                    start = false;

                }else{
                    output += ",";
                }
                output += names[i];

            }
            return output;
        }


        function azquojsonfeed(obj) {


            if (obj==null) return;
            var chart = obj.chart;
            if (chart > "") {
                window.open(chart, "_blank", "toolbar=no, scrollbars=no, resizable=yes, width=800, height=400");
                return;
            }
            if (obj.changedvalues > "") {
                for (var i = 0; i < obj.changedvalues.length; i++) {
                    var val = obj.changedvalues[i];
                    var elem = document.getElementById(val.id);
                    if (val.id != lastentered){//don't overwrite entered selection cells
                        elem.innerHTML = val.value;
                    }
                    elem.className = val.class;

                }
            }
            if (obj.provenance > "") {
                var innerhtml = "<h2>Provenance</h2>"
                innerhtml += decodeProvenance(obj.provenance, 0);
                var prov = document.getElementById("provenancecontent");
                prov.innerHTML = innerhtml;
                document.getElementById("provenance").style.display = "block";

            }
            if (obj.message > ""){
                document.getElementById("message").innerHTML = obj.message;
            }
            if (obj.names > ""){
                showSubset(obj.names);
            }
            if (obj.choices> ""){
                 var selection='<select onclick=\'selectFromListChosen("' + obj.selection + '")\' id="selectionListItem">\n';
                for (var i=0; i <obj.choices.length; i++){
                    var choice = obj.choices[i];
                    selection += '<option value="' + choice + '">' + choice + '</option>\n';

                }
                selection += '</select>\n';
                var selectionListPanel = document.getElementById("selectionListPanel");
                var selectionList = document.getElementById("selectionList");
                selectionList.innerHTML=selection;
                if (obj.choices.length == 1){
                    selectFromListChosen(obj.selection);

                }
                selectionListPanel.style.display="block";
                var selectionListItem = document.getElementById("selectionListItem");
                selectionListItem.size = selectionListItem.options.length;

            }
        }

        function showSubset(names){
            var list = document.createElement("ul");
            var html="";
            for (var i = 0; i < names.length; i++) {
                var name = names[i];
                html += "<li"
                if (name.elements > 0) {
                    html += " onclick=\"az_clicklist(this)\"";
                }
                html += ">" + name.name + "</li>\n";
                html += "<div class=\"notseen\">" + name.id + "</div>"
            }
            list.innerHTML = html;
            var nextnode = nextSibling(clickedItem);
            while (nextnode!=null && nextnode.tagName.toLowerCase()!="li"){
                nextnode = nextSibling(nextnode);
            }
            clickedItem.parentNode.insertBefore(list, nextnode);





        }




        function decodeProvenance(provDisplays, level) {
            var style = "";
            if (level > 1) style = ' style="display:none;"';
            var output = "<ul" + style + ">";
            for (var i = 0; i < provDisplays.length; i++) {
                var provDisplay = provDisplays[i];
                if (provDisplay.hasOwnProperty("who") || provDisplay.hasOwnProperty("heading") || provDisplay.hasOwnProperty("value")) {
                    if (provDisplay.who > "") {
                        output += "<li>" + provDisplay.when + " by " + provDisplay.who + "<br/>" + provDisplay.how + " " + provDisplay.where + "</li></ul>";
                        return output;
                    }
                    if (provDisplay.heading) {
                        output += '<li onclick="tree_click(this);">' + provDisplay.heading + "</li>";
                        output += decodeProvenance(provDisplay.items, level + 1);
                    } else {
                        output += "<li>" + provDisplay.value + " " + provDisplay.name + "</li>";
                    }
                }else{
                    output += "<li>New Data</li>";
                }
            }
            output += "</ul>";
            return output;
        }

        function tree_click(e){
            var azSet;
            if (e.target) azSet = e.target.nextElementSibling;//from Googling should be IE
            if (!azSet) azSet = e.nextElementSibling;
            if (!azSet) azSet = e.nextSibling; //IE
            if (azSet.style.display=="none"){
                azSet.style.display="block";
            }else{
                azSet.style.display="none";
            }
        }



        function setSpreadsheetSize(){
            var ss = document.getElementById("spreadsheet");
            var w = window.innerWidth;
            var h = window.innerHeight;
            ss.style.height = (h- 126) + "px";
            ss.style.width = (w-22) + "px";
        }




        if (document.addEventListener) {
            document.addEventListener('contextmenu', function(e) {
                onClick(e);
                var region = mouseInDataRegion(e);
                if (region != "no region"){
                    showDataRegionMenu(region,e);
                    e.preventDefault();
                }
            }, false);
        } else {
            document.attachEvent('oncontextmenu', function() {
                var region = mouseInDataRegion(e);
                if (region != "no region"){
                    showDataRegionMenu(region, e);
                    window.event.returnValue = false;
                }
            });
        }

        function submit() {
            var ok = true;
            var j = 1;
            return ok;
        }

        function chooseFromList(editedName){
           var entered = document.getElementById("select" + editedName).value.trim();
            if (entered.length > 3) {
                azquojson("Online", "opcode=choosefromlist&editedname=" + editedName + "&editedvalue=" + encodeURIComponent(entered));
            }


        }


    </script>
</head>


<body>
<div id="wrapper">
    <div class="banner" id="banner">
        <a href="#" onclick="toMenu()"><img src="/images/azquo-logo2.png" alt="Azquo logo"/></a>
        <a class="menubutton" href="#" onclick="openTopMenu();"><img src="/images/menu.png"></a>
        <div id="topmenubox" class="topmenubox">
            <ul  class="topmenu">
                <li><a href="#" onclick="downloadAsXLS()">Download as XLSX</a></li>
                <li><a href="#" onclick="downloadAsPDF();">Download as PDF</a></li>
                <li><a href="#" onclick="inspectDatabase();">Inspect database</a></li>
                <li><a href="#" onclick="uploadFile();">Upload file</a></li>
                <li>
                    <a href="#"  onclick="showHighlight();">Highlight changed data
                         (currently $hdays days)
                  </a>
                </li>
                <li><a href="#" onclick="tryNewSheet()">Show new version</a></li>
            </ul>
        </div>
        <a class="savedata" href="#" onclick="saveData()" id="saveData" style="display:none;">Save data</a>




        <div id="entryfield">Entry: <input id="topentry" value=""  type="text"/></div>
        <div id="message">$topmessage</div>
    </div>
    <form name="azquoform" onsubmit="submit();"  $enctype method="post" action="/api/Online">
        <div class="excelDefaults" style="height:$maxheight;overflow:auto" id="spreadsheet">
            <input type="hidden" name="reportid" id="reportId" value="$reportid"/>
            <input type="hidden" name="reporttoload" id="reportToLoad" value="$reportid"/>
            <input type="hidden" name="editedname" id="editedName" value=""/>
            <input type="hidden" name="editedvalue" id="editedValue" value=""/>
            <input type="hidden" name="spreadsheetname" id="spreadsheetname" value="$spreadsheetname"/>
            <input type="hidden" name="opcode" id="opcode" value=""/>
            <input type="hidden" name="row" id="row" value=""/>
            <input type="hidden" name="col" id="col" value=""/>
            <input type="hidden" name="trynewsheet" id="newversion" value="">


            <div id="selector" class="selector"></div>
            <div id="selectionListPanel" class="provenance"><div class="closebutton"><a href="#" onclick="document.getElementById('selectionListPanel').style.display = 'none';"><img src="https://data.azquo.com/images/closebutton.png" alt="close button"/></a></div><div id="selectionList" class="content"></div></div>
            <div id="provenance" class="provenance"><div class="closebutton"><a href="#" onclick="document.getElementById('provenance').style.display = 'none';"><img src="https://data.azquo.com/images/closebutton.png" alt="close button"/></a></div><div id="provenancecontent" class="content"></div></div>
            #foreach($mregion in $menuregions)
                <div id="menu${mregion.name}" class="dataregionmenu">
                    <div id="regionlist$mregion.name" class="regionspec">
                        <div class="spectitle">
                            <a href="" #" onclick="showProvenance();">Show provenance</a>
                        </div>
                        <div class="sheetoptions" onclick="return false;">
                            <table>
                                <tr>
                                    <td>sorted row count (0 disabled)</td>
                                    <td><input type="text" value="${mregion.maxrows}" class="optionval"
                                               name="maxrows${mregion.name}"></td>
                                </tr>
                                <tr>
                                    <td>sorted column limit (0 disabled)</td>
                                    <td><input type="text" value="${mregion.maxcols}" class="optionval"
                                               name="maxcols${mregion.name}"></td>
                                </tr>
                                <tr>
                                    <td>hide blank rows batch size (0 disabled)</td>
                                    <td><input type="text" value="${mregion.hiderows}" class="optionval"
                                               name="hiderows${mregion.name}"></td>
                                </tr>
                                <tr>
                                    <td>allow row and column sorts</td>
                                    <td><input type="checkbox" ${mregion.sortable} class="optionval"
                                               name="sortable${mregion.name}"></td>
                                </tr>
                                <tr>
                                    <td><a href="#" onclick="clearOverrideOptions('$mregion.name');">Clear options</a></td>
                                    <td><a href="#" onclick="submitOptions('$mregion.name');">Submit</a></td>
                                </tr>
                            </table>
                        </div>

                        <div class="spectitle"><a href="" #" onclick="showRegionSpec('$mregion.name');">Show region spec</a></div>
                    </div>
                    <div id="regionspec$mregion.name" class="regionspec">
                        <div class="spectitle">SPECIFICATION FOR DATA REGION $mregion.name</div>
                        <div class="spectitle">Column headings</div>
                        <div class="specdata">$mregion.coldata</div>
                        <div class="spectitle">Row headings</div>
                        <div class="specdata">$mregion.rowdata</div>
                        <div class="spectitle">Context</div>
                        <div class="specdata">$mregion.contextdata</div>

                    </div>
                </div>
            #end

             <div id="highlightoptions" class="highlightoptions">
                <p>Highlight data changed recently</p>
                <div class="highlightoption"><a href="#" onclick="highlight(0)">None</a></div>
                <div class="highlightoption"><a href="#" onclick="highlight(1)">1 day</a></div>
                <div class="highlightoption"><a href="#" onclick="highlight(7)">7 days</a></div>
                <div class="highlightoption"><a href="#" onclick="highlight(30)">30 days</a></div>
                <div class="highlightoption"><a href="#" onclick="highlight(90)">90 days</a></div>
                <div class="highlightoption"><a href="#" onclick="highlight(365)">1 year</a></div>

            </div>
            $workbook
            $charts
        </div>
    </form>
    <div class="tabs" id="tabs">$tabs</div>
</div>
<script type="text/javascript">


    positionSelection();
    convertRegions();
    setSpreadsheetSize();


</script>
</body>
</html>